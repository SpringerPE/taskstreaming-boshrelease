#!/usr/bin/env bash

# job name & index of this VM within cluster
export DEPLOYMENT_NAME="<%= spec.deployment %>"

# e.g. JOB_NAME=redis, JOB_INDEX=0
export JOB_NAME='<%= name %>'
export JOB_INDEX="<%= spec.index %>"
# full job name, like redis/0 or webapp/3
export JOB_FULL="$JOB_NAME/$JOB_INDEX"
export JOB_AZ="<%= spec.az %>"
export JOB_DNS_DOMAIN="<%= spec.dns_domain_name %>"

export INSTANCE_BOOTSTRAP=<% if spec.bootstrap == true || spec.bootstrap =~ (/(true|t|yes|y|1)$/i) %>1<% else %>0<% end %>
export INSTANCE_NAME="<%= spec.name %>"
# spec.networks.send(spec.networks.methods(false).first).ip
# spec.networks.to_h.values.first.ip
export INSTANCE_ID="<%= spec.id %>"
export INSTANCE_ADDRESS="<%= spec.address %>"
export INSTANCE_IP="<%= spec.ip %>"


# Settings
export TERM="xterm"
export LANG=POSIX

export SESSION="streaming"
export TASK_FILE="/var/vcap/jobs/task-streaming/bin/task.sh"
export CONFIG="/var/vcap/jobs/task-streaming/config/task.cfg"

<% if p('task_streaming.permit_write') == true || p('task_streaming.permit_write') =~ (/(true|t|yes|y|1)$/i) %>
export TASK_GOTTY="$TASK_FILE"
<% else %>
export TASK_GOTTY="tmux -2 -u new -A -s $SESSION -d"
export TASK_WATCHER="tmux -2 -u send '/var/vcap/jobs/task-streaming/bin/runner.sh' C-m"

export TASK_FILE_LOCK="/var/vcap/sys/run/task-streaming/task.lock"
export TASK_FILE_PID="/var/vcap/sys/run/task-streaming/task.pid"
export TASK_CTL_LOOP="<%= p('task_streaming.task_ctl_loop', '3') %>"
export TASK_LOOP_TIME="<%= p('task_streaming.task_loop_sleep', '1') %>"
<% end %>
